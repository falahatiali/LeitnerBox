version: '3'
services:
    leitner-nginx:
        build:
            context: docker/nginx
            dockerfile: Dockerfile
            args:
                - NGINXUSER=${NGINXUSER:-www-data}
                - NGINXGROUP=${NGINXGROUP:-www-data}
        container_name: leitner-nginx
        ports:
            - '${APP_PORT:-80}:80'
            - '443:443'
        volumes:
            - .:/var/www/html:delegated
        restart: unless-stopped
        depends_on:
            - leitner
        networks:
            - leitner

    leitner:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        container_name: leitner
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '9000:9000'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - leitner
        depends_on:
            - leitner-mysql
            - leitner-redis

    scheduler:
        build:
            context: .
            dockerfile: scheduler.dockerfile
        container_name: scheduler
        volumes:
            - '.:/var/www/html'
        restart: unless-stopped
        networks:
            - leitner
        depends_on:
            - leitner-mysql

    leitner-mysql:
        image: 'mysql/mysql-server:8.0'
        container_name: leitner-mysql
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'leitner-mysql:/var/lib/mysql'
        networks:
            - leitner
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

    leitner-redis:
        image: 'redis:alpine'
        container_name: leitner-redis
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'leitner-redis:/data'
        networks:
            - leitner
        healthcheck:
            test: [ "CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    mailhog:
        image: mailhog/mailhog
        container_name: mailhog
        logging:
            driver: 'none'
        ports:
            - "8003:1025"
            - "8100:8025"
        networks:
            - leitner

networks:
    leitner:
        driver: bridge
volumes:
    leitner-mysql:
        driver: local
    leitner-redis:
        driver: local
